<?php

namespace app\modules\hr\models\embedded;

use MongoDB\BSON\ObjectID;

use app\modules\hr\Module;

use app\modules\hr\models\DictionaryWord;
use app\modules\hr\validators\DictionaryWordValidator;
use app\modules\hr\traits\DictionaryWordEmbedded;


/**
 * Class BusinessTrip
 *
 * @property integer $duration_in_days    Кол-во дней в командировке
 * @property string  $date_begin          Дата начала командировки (строка)
 * @property integer $date_begin_unixtime Дата начала командировки (UNIX-время)
 * @property string  $date_end            Дата окончания командировки (строка)
 * @property integer $date_end_unixtime   Дата окончания командировки (UNIX-время)
 *
 * @property string $location     Место положение, адрес, город (куда поедет)
 * @property string $organization Организация (предприятие) к кому поедут
 *
 * @property string $purpose  Цель поездки(командировки)
 * @property string $based_on Основание для позедки (документ, номер, дата)
 *
 * @package app\modules\hr\models\embedded
 */
class BusinessTrip extends EmbeddedModel
{
    const DATE_REGEXP_PATTERN = '/^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{4}$/i';
    const DATE_REGEXP_PATTERN_LABEL = 'дд.мм.гггг';
    const DATE_REGEXP_PATTERN_FOR_DATE_PICKER = 'dd.mm.yyyy';
    const DATE_PHP_FORMAT = 'd.m.Y';

    /** @var integer */
    public $duration_in_days;
    /** @var string */
    public $date_begin;
    /** @var integer */
    public $date_begin_unixtime;
    /** @var string */
    public $date_end;
    /** @var integer */
    public $date_end_unixtime;
    /** @var string */
    public $location;
    /** @var string */
    public $organization;
    /** @var string */
    public $purpose;
    /** @var string */
    public $based_on;

    /**
     * @return array
     */
    public function scenarios()
    {
        return [
            self::SCENARIO_DEFAULT => [
                'duration_in_days',
                'date_begin',
                'date_end',
                'location',
                'organization',
                'purpose',
                'based_on',
            ],
        ];
    }

    /**
     * @return array
     */
    public function rules()
    {
        return [
            [['location', 'organization', 'purpose', 'based_on'], 'string', 'max' => 255],

            ['duration_in_days', 'integer'],

            [['date_begin', 'date_end'], 'match',
                'pattern' => self::DATE_REGEXP_PATTERN,
                'message' => Module::t('business-trip', 'DATE__VALIDATE_MESSAGE__BAD_DATE', [
                    'format' => self::DATE_REGEXP_PATTERN_LABEL,
                ]),
            ],

            [['duration_in_days', 'date_begin', 'date_end', 'location', 'organization', 'purpose', 'based_on'], 'required'],
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        return [
            'duration_in_days' => Module::t('business-trip', 'ATTR__DURATION_IN_DAYS__LABEL'),
            'date_begin'       => Module::t('business-trip', 'ATTR__DATE_BEGIN__LABEL'),
            'date_end'         => Module::t('business-trip', 'ATTR__DATE_END__LABEL'),
            'location'         => Module::t('business-trip', 'ATTR__LOCATION__LABEL'),
            'organization'     => Module::t('business-trip', 'ATTR__ORGANIZATION__LABEL'),
            'purpose'          => Module::t('business-trip', 'ATTR__PURPOSE__LABEL'),
            'based_on'         => Module::t('business-trip', 'ATTR__BASED_ON__LABEL'),
        ];
    }

    public function afterValidate()
    {
        $this->date_begin_unixtime = ($date_begin_unixtime = strtotime($this->date_begin) !== false) ? $date_begin_unixtime : null;
        $this->date_end_unixtime = ($date_end_unixtime = strtotime($this->date_end) !== false) ? $date_end_unixtime : null;
        parent::afterValidate(); // TODO: Change the autogenerated stub
    }

    protected static function labelForExportColumn($message)
    {
        return Module::t('business-trip', 'MODEL_NAME') . ': ' . Module::t('business-trip', $message);
    }

    public static function exportColumnsConfig($attribute)
    {
        return [
            [
                'attribute' => $attribute . '.duration_in_days',
                'label' => self::labelForExportColumn('ATTR__DURATION_IN_DAYS__LABEL'),
            ],
            [
                'attribute' => $attribute . '.date_begin',
                'label' => self::labelForExportColumn('ATTR__DATE_BEGIN__LABEL'),
            ],
            [
                'attribute' => $attribute . '.date_end',
                'label' => self::labelForExportColumn('ATTR__DATE_END__LABEL'),
            ],
            [
                'attribute' => $attribute . '.location',
                'label' => self::labelForExportColumn('ATTR__LOCATION__LABEL'),
            ],
            [
                'attribute' => $attribute . '.organization',
                'label' => self::labelForExportColumn('ATTR__ORGANIZATION__LABEL'),
            ],
            [
                'attribute' => $attribute . '.purpose',
                'label' => self::labelForExportColumn('ATTR__PURPOSE__LABEL'),
            ],
            [
                'attribute' => $attribute . '.based_on',
                'label' => self::labelForExportColumn('ATTR__BASED_ON__LABEL'),
            ],

        ];
    }
}